name: CI/CD workflow

on:
  push:
    branches:
      - main
      - chore/47-rolling-after

jobs:
  build-and-deploy:
    runs-on: [ self-hosted ]

    defaults:
      run:
        shell: bash

    env:
      PROJECT_DIR: /home/ubuntu/actions-runner/_work/ddarahang-be
      DEPLOY_DIR: /home/ubuntu/ddarahang
      JAR_NAME: ddarahang.jar

    steps:
      - name: Check current working directory
        run: pwd

      - name: List files
        run: ls -la

      - name: CheckOut
        uses: actions/checkout@v4

      - name: Set Up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set Up Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build and test
        id: build
        run: ./gradlew build

      - name: Test
        run: pwd

      - name: Stop running application (if exists)
        run: |
          PID=$(sudo lsof -t -i :8080 || echo "")

          if [ -n "$PID" ]; then
            echo "Stopping existing application with PID $PID..."
            sudo kill -9 "$PID"
          else
            echo "No running application found."
          fi

      - name: Copy jar to deployment folder
        run: sudo cp build/libs/$JAR_NAME $DEPLOY_DIR

      - name: Grant execute permission for JAR
        run: sudo chmod +x $DEPLOY_DIR/$JAR_NAME

      - name: Run application
        run: |
          sudo nohup java -jar \
          -DRDS_HOST=${{ secrets.RDS_HOST }} \
          -DRDS_USERNAME=${{ secrets.RDS_USERNAME }} \
          -DRDS_PASSWORD=${{ secrets.RDS_PASSWORD }} \
          $DEPLOY_DIR/$JAR_NAME > /home/ubuntu/application.log 2>&1 &

      # Rollback if deploy fails
      - name: Run rolling deployment (deploy.sh)
        run: |
          chmod +x ./scripts/deploy.sh
          ./scripts/deploy.sh
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
